const Kategori = require('../models/Kategori');

// @desc    Membuat Kategori baru
// @route   POST /api/kategori
// @access  Private (nanti ditambahkan middleware)
const createKategori = async (req, res) => {
    try {
        const { nama } = req.body;

        if (!nama) {
            return res.status(400).json({ msg: 'Nama kategori tidak boleh kosong' });
        }

        const kategori = await Kategori.create({ nama });
        res.status(201).json(kategori);
    } catch (error) {
        res.status(500).json({ msg: 'Server Error', error: error.message });
    }
};

// @desc    Mendapatkan semua Kategori
// @route   GET /api/kategori
// @access  Public
const getAllKategori = async (req, res) => {
    try {
        const kategori = await Kategori.findAll();
        res.status(200).json(kategori);
    } catch (error) {
        res.status(500).json({ msg: 'Server Error', error: error.message });
    }
};

// @desc    Mendapatkan Kategori berdasarkan ID
// @route   GET /api/kategori/:id
// @access  Public
const getKategoriById = async (req, res) => {
    try {
        const kategori = await Kategori.findByPk(req.params.id);

        if (!kategori) {
            return res.status(404).json({ msg: 'Kategori tidak ditemukan' });
        }

        res.status(200).json(kategori);
    } catch (error) {
        res.status(500).json({ msg: 'Server Error', error: error.message });
    }
};

// @desc    Memperbarui Kategori
// @route   PUT /api/kategori/:id
// @access  Private (nanti ditambahkan middleware)
const updateKategori = async (req, res) => {
    try {
        const { nama } = req.body;
        const kategori = await Kategori.findByPk(req.params.id);

        if (!kategori) {
            return res.status(404).json({ msg: 'Kategori tidak ditemukan' });
        }

        if (!nama) {
            return res.status(400).json({ msg: 'Nama kategori tidak boleh kosong' });
        }

        kategori.nama = nama;
        await kategori.save();

        res.status(200).json(kategori);
    } catch (error) {
        res.status(500).json({ msg: 'Server Error', error: error.message });
    }
};

// @desc    Menghapus Kategori
// @route   DELETE /api/kategori/:id
// @access  Private (nanti ditambahkan middleware)
const deleteKategori = async (req, res) => {
    try {
        const kategori = await Kategori.findByPk(req.params.id);

        if (!kategori) {
            return res.status(404).json({ msg: 'Kategori tidak ditemukan' });
        }

        await kategori.destroy();
        res.status(200).json({ msg: 'Kategori berhasil dihapus' });
    } catch (error) {
        res.status(500).json({ msg: 'Server Error', error: error.message });
    }
};

module.exports = {
    createKategori,
    getAllKategori,
    getKategoriById,
    updateKategori,
    deleteKategori
};



//router

const express = require('express');
const router = express.Router();
const {
    createKategori,
    getAllKategori,
    getKategoriById,
    updateKategori,
    deleteKategori
} = require('../controller/KategoriiController');

// /api/kategori
router.route('/')
    .post(createKategori)
    .get(getAllKategori);

// /api/kategori/:id
router.route('/:id')
    .get(getKategoriById)
    .put(updateKategori)
    .delete(deleteKategori);

module.exports = router;